<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.2 r1790748">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments">${__CSVRead(D:\ordercode.dat,${__Random(0,100,)})}   D:\ordercode.dat   //home/baseuser/jmeter-3.2-dubbo/chenxian/ordercode.dat</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="pathwin" elementType="Argument">
            <stringProp name="Argument.name">pathwin</stringProp>
            <stringProp name="Argument.value">/home/baseuser/jmeter-3.2-dubbo/chenxian/ordercode.dat</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="线程组_50" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">50</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1523438737000</longProp>
        <longProp name="ThreadGroup.end_time">1523438737000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">600</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="false">
          <collectionProp name="UserParameters.names">
            <stringProp name="106006350">order</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-1178850920">
              <stringProp name="120315938">${__CSVRead(D:\ordercode.dat,${__Random(0,100,)})}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
          <stringProp name="TestPlan.comments"> D:\ordercode.dat  /home/baseuser/jmeter-3.2-dubbo/extras/ordercode.dat</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">utf-8</stringProp>
          <stringProp name="filename"> D:\ordercode.dat</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">ordercode</stringProp>
        </CSVDataSet>
        <hashTree/>
        <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="云打印—50(10)" enabled="true">
          <stringProp name="TestPlan.comments">{&quot;orderCodes&quot;:[&quot;ZT1803074449139970&quot;,&quot;ZT1803084473701341&quot;]}  {&quot;orderCodes&quot;:[&quot;${order}&quot;,&quot;${order}&quot;,&quot;${order}&quot;,&quot;${order}&quot;,&quot;${order}&quot;]}</stringProp>
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="URL" elementType="Argument">
                <stringProp name="Argument.name">URL</stringProp>
                <stringProp name="Argument.value">zookeeper://10.9.15.32:2181?backup=10.9.15.33:2181,10.9.15.34:2181</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="接口名(必填)" elementType="Argument">
                <stringProp name="Argument.name">接口名(必填)</stringProp>
                <stringProp name="Argument.value">com.zto.order.PreOrderSearchService</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="appid" elementType="Argument">
                <stringProp name="Argument.name">appid</stringProp>
                <stringProp name="Argument.value">zzt-service-fat</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="appkey" elementType="Argument">
                <stringProp name="Argument.name">appkey</stringProp>
                <stringProp name="Argument.value">63dcba400f99f463199cefac0fdc5ce7b81cdd89</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="方法名(必填)" elementType="Argument">
                <stringProp name="Argument.name">方法名(必填)</stringProp>
                <stringProp name="Argument.value">searchByOrderCodes</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="方法参数类型数组(必填)" elementType="Argument">
                <stringProp name="Argument.name">方法参数类型数组(必填)</stringProp>
                <stringProp name="Argument.value">[&apos;com.zto.order.bean.request.SearchByOrderCodesReq&apos;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数1" elementType="Argument">
                <stringProp name="Argument.name">请求参数1</stringProp>
                <stringProp name="Argument.value"> {&quot;orderCodes&quot;:[&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数2" elementType="Argument">
                <stringProp name="Argument.name">请求参数2</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数3" elementType="Argument">
                <stringProp name="Argument.name">请求参数3</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数4" elementType="Argument">
                <stringProp name="Argument.name">请求参数4</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数5" elementType="Argument">
                <stringProp name="Argument.name">请求参数5</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数6" elementType="Argument">
                <stringProp name="Argument.name">请求参数6</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数7" elementType="Argument">
                <stringProp name="Argument.name">请求参数7</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数8" elementType="Argument">
                <stringProp name="Argument.name">请求参数8</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数9" elementType="Argument">
                <stringProp name="Argument.name">请求参数9</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数10" elementType="Argument">
                <stringProp name="Argument.name">请求参数10</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">com.zto.jmeter.dubbo.JMeterOrderServiceTest</stringProp>
        </JavaSampler>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String data = SampleResult.getResponseDataAsString();
if (data.indexOf(&quot;\&quot;status\&quot;:true&quot;) != -1) { //对返回值就行判断
    SampleResult.setSuccessful(true); 
}
else {
    SampleResult.setSuccessful(false); 
     log.info(&quot;请求数据&quot;+SampleResult.getSamplerData());
    log.info(&quot;返回数据&quot;+data);
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>false</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>false</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>false</assertions>
                <subresults>false</subresults>
                <responseData>true</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
              </value>
            </objProp>
            <stringProp name="filename">F:\Projects\XXX接口性能压测Test201804120546.jtl</stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>false</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>false</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>true</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="线程组_100" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">100</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1523438737000</longProp>
        <longProp name="ThreadGroup.end_time">1523438737000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">600</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
          <stringProp name="TestPlan.comments"> D:\ordercode.dat  /home/baseuser/jmeter-3.2-dubbo/extras/ordercode.dat</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">utf-8</stringProp>
          <stringProp name="filename">/home/baseuser/jmeter-3.2-dubbo/extras/ordercode.dat</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">ordercode</stringProp>
        </CSVDataSet>
        <hashTree/>
        <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="云打印—100(10)" enabled="true">
          <stringProp name="TestPlan.comments">{&quot;orderCodes&quot;:[&quot;ZT1803074449139970&quot;,&quot;ZT1803084473701341&quot;]}  {&quot;orderCodes&quot;:[&quot;${order}&quot;,&quot;${order}&quot;,&quot;${order}&quot;,&quot;${order}&quot;,&quot;${order}&quot;]}</stringProp>
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="URL" elementType="Argument">
                <stringProp name="Argument.name">URL</stringProp>
                <stringProp name="Argument.value">zookeeper://10.9.15.32:2181?backup=10.9.15.33:2181,10.9.15.34:2181</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="接口名(必填)" elementType="Argument">
                <stringProp name="Argument.name">接口名(必填)</stringProp>
                <stringProp name="Argument.value">com.zto.order.PreOrderSearchService</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="appid" elementType="Argument">
                <stringProp name="Argument.name">appid</stringProp>
                <stringProp name="Argument.value">zzt-service-fat</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="appkey" elementType="Argument">
                <stringProp name="Argument.name">appkey</stringProp>
                <stringProp name="Argument.value">63dcba400f99f463199cefac0fdc5ce7b81cdd89</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="方法名(必填)" elementType="Argument">
                <stringProp name="Argument.name">方法名(必填)</stringProp>
                <stringProp name="Argument.value">searchByOrderCodes</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="方法参数类型数组(必填)" elementType="Argument">
                <stringProp name="Argument.name">方法参数类型数组(必填)</stringProp>
                <stringProp name="Argument.value">[&apos;com.zto.order.bean.request.SearchByOrderCodesReq&apos;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数1" elementType="Argument">
                <stringProp name="Argument.name">请求参数1</stringProp>
                <stringProp name="Argument.value"> {&quot;orderCodes&quot;:[&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数2" elementType="Argument">
                <stringProp name="Argument.name">请求参数2</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数3" elementType="Argument">
                <stringProp name="Argument.name">请求参数3</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数4" elementType="Argument">
                <stringProp name="Argument.name">请求参数4</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数5" elementType="Argument">
                <stringProp name="Argument.name">请求参数5</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数6" elementType="Argument">
                <stringProp name="Argument.name">请求参数6</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数7" elementType="Argument">
                <stringProp name="Argument.name">请求参数7</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数8" elementType="Argument">
                <stringProp name="Argument.name">请求参数8</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数9" elementType="Argument">
                <stringProp name="Argument.name">请求参数9</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数10" elementType="Argument">
                <stringProp name="Argument.name">请求参数10</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">com.zto.jmeter.dubbo.JMeterOrderServiceTest</stringProp>
        </JavaSampler>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String data = SampleResult.getResponseDataAsString();
if (data.indexOf(&quot;\&quot;status\&quot;:true&quot;) != -1) { //对返回值就行判断
    SampleResult.setSuccessful(true); 
}
else {
    SampleResult.setSuccessful(false); 
     log.info(&quot;请求数据&quot;+SampleResult.getSamplerData());
    log.info(&quot;返回数据&quot;+data);
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>false</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>false</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>false</assertions>
                <subresults>false</subresults>
                <responseData>true</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
              </value>
            </objProp>
            <stringProp name="filename">F:\Projects\XXX接口性能压测Test201804120546.jtl</stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>false</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>false</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>true</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="线程组_150" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">150</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1523438737000</longProp>
        <longProp name="ThreadGroup.end_time">1523438737000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">600</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
          <stringProp name="TestPlan.comments"> D:\ordercode.dat  /home/baseuser/jmeter-3.2-dubbo/extras/ordercode.dat</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">utf-8</stringProp>
          <stringProp name="filename">/home/baseuser/jmeter-3.2-dubbo/extras/ordercode.dat</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">ordercode</stringProp>
        </CSVDataSet>
        <hashTree/>
        <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="云打印—150(10)" enabled="true">
          <stringProp name="TestPlan.comments">{&quot;orderCodes&quot;:[&quot;ZT1803074449139970&quot;,&quot;ZT1803084473701341&quot;]}  {&quot;orderCodes&quot;:[&quot;${order}&quot;,&quot;${order}&quot;,&quot;${order}&quot;,&quot;${order}&quot;,&quot;${order}&quot;]}</stringProp>
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="URL" elementType="Argument">
                <stringProp name="Argument.name">URL</stringProp>
                <stringProp name="Argument.value">zookeeper://10.9.15.32:2181?backup=10.9.15.33:2181,10.9.15.34:2181</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="接口名(必填)" elementType="Argument">
                <stringProp name="Argument.name">接口名(必填)</stringProp>
                <stringProp name="Argument.value">com.zto.order.PreOrderSearchService</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="appid" elementType="Argument">
                <stringProp name="Argument.name">appid</stringProp>
                <stringProp name="Argument.value">zzt-service-fat</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="appkey" elementType="Argument">
                <stringProp name="Argument.name">appkey</stringProp>
                <stringProp name="Argument.value">63dcba400f99f463199cefac0fdc5ce7b81cdd89</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="方法名(必填)" elementType="Argument">
                <stringProp name="Argument.name">方法名(必填)</stringProp>
                <stringProp name="Argument.value">searchByOrderCodes</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="方法参数类型数组(必填)" elementType="Argument">
                <stringProp name="Argument.name">方法参数类型数组(必填)</stringProp>
                <stringProp name="Argument.value">[&apos;com.zto.order.bean.request.SearchByOrderCodesReq&apos;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数1" elementType="Argument">
                <stringProp name="Argument.name">请求参数1</stringProp>
                <stringProp name="Argument.value"> {&quot;orderCodes&quot;:[&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数2" elementType="Argument">
                <stringProp name="Argument.name">请求参数2</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数3" elementType="Argument">
                <stringProp name="Argument.name">请求参数3</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数4" elementType="Argument">
                <stringProp name="Argument.name">请求参数4</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数5" elementType="Argument">
                <stringProp name="Argument.name">请求参数5</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数6" elementType="Argument">
                <stringProp name="Argument.name">请求参数6</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数7" elementType="Argument">
                <stringProp name="Argument.name">请求参数7</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数8" elementType="Argument">
                <stringProp name="Argument.name">请求参数8</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数9" elementType="Argument">
                <stringProp name="Argument.name">请求参数9</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数10" elementType="Argument">
                <stringProp name="Argument.name">请求参数10</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">com.zto.jmeter.dubbo.JMeterOrderServiceTest</stringProp>
        </JavaSampler>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String data = SampleResult.getResponseDataAsString();
if (data.indexOf(&quot;\&quot;status\&quot;:true&quot;) != -1) { //对返回值就行判断
    SampleResult.setSuccessful(true); 
}
else {
    SampleResult.setSuccessful(false); 
     log.info(&quot;请求数据&quot;+SampleResult.getSamplerData());
    log.info(&quot;返回数据&quot;+data);
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>false</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>false</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>false</assertions>
                <subresults>false</subresults>
                <responseData>true</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
              </value>
            </objProp>
            <stringProp name="filename">F:\Projects\XXX接口性能压测Test201804120546.jtl</stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="线程组_200" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">200</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1523438737000</longProp>
        <longProp name="ThreadGroup.end_time">1523438737000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">600</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
          <stringProp name="TestPlan.comments"> D:\ordercode.dat  /home/baseuser/jmeter-3.2-dubbo/extras/ordercode.dat</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">utf-8</stringProp>
          <stringProp name="filename">/home/baseuser/jmeter-3.2-dubbo/extras/ordercode.dat</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">ordercode</stringProp>
        </CSVDataSet>
        <hashTree/>
        <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="云打印—200(10)" enabled="true">
          <stringProp name="TestPlan.comments">{&quot;orderCodes&quot;:[&quot;ZT1803074449139970&quot;,&quot;ZT1803084473701341&quot;]}  {&quot;orderCodes&quot;:[&quot;${order}&quot;,&quot;${order}&quot;,&quot;${order}&quot;,&quot;${order}&quot;,&quot;${order}&quot;]}</stringProp>
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="URL" elementType="Argument">
                <stringProp name="Argument.name">URL</stringProp>
                <stringProp name="Argument.value">zookeeper://10.9.15.32:2181?backup=10.9.15.33:2181,10.9.15.34:2181</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="接口名(必填)" elementType="Argument">
                <stringProp name="Argument.name">接口名(必填)</stringProp>
                <stringProp name="Argument.value">com.zto.order.PreOrderSearchService</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="appid" elementType="Argument">
                <stringProp name="Argument.name">appid</stringProp>
                <stringProp name="Argument.value">zzt-service-fat</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="appkey" elementType="Argument">
                <stringProp name="Argument.name">appkey</stringProp>
                <stringProp name="Argument.value">63dcba400f99f463199cefac0fdc5ce7b81cdd89</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="方法名(必填)" elementType="Argument">
                <stringProp name="Argument.name">方法名(必填)</stringProp>
                <stringProp name="Argument.value">searchByOrderCodes</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="方法参数类型数组(必填)" elementType="Argument">
                <stringProp name="Argument.name">方法参数类型数组(必填)</stringProp>
                <stringProp name="Argument.value">[&apos;com.zto.order.bean.request.SearchByOrderCodesReq&apos;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数1" elementType="Argument">
                <stringProp name="Argument.name">请求参数1</stringProp>
                <stringProp name="Argument.value"> {&quot;orderCodes&quot;:[&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数2" elementType="Argument">
                <stringProp name="Argument.name">请求参数2</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数3" elementType="Argument">
                <stringProp name="Argument.name">请求参数3</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数4" elementType="Argument">
                <stringProp name="Argument.name">请求参数4</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数5" elementType="Argument">
                <stringProp name="Argument.name">请求参数5</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数6" elementType="Argument">
                <stringProp name="Argument.name">请求参数6</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数7" elementType="Argument">
                <stringProp name="Argument.name">请求参数7</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数8" elementType="Argument">
                <stringProp name="Argument.name">请求参数8</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数9" elementType="Argument">
                <stringProp name="Argument.name">请求参数9</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数10" elementType="Argument">
                <stringProp name="Argument.name">请求参数10</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">com.zto.jmeter.dubbo.JMeterOrderServiceTest</stringProp>
        </JavaSampler>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String data = SampleResult.getResponseDataAsString();
if (data.indexOf(&quot;\&quot;status\&quot;:true&quot;) != -1) { //对返回值就行判断
    SampleResult.setSuccessful(true); 
}
else {
    SampleResult.setSuccessful(false); 
     log.info(&quot;请求数据&quot;+SampleResult.getSamplerData());
    log.info(&quot;返回数据&quot;+data);
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>false</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>false</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>false</assertions>
                <subresults>false</subresults>
                <responseData>true</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
              </value>
            </objProp>
            <stringProp name="filename">F:\Projects\XXX接口性能压测Test201804120546.jtl</stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="线程组_250" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">250</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1523438737000</longProp>
        <longProp name="ThreadGroup.end_time">1523438737000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">600</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
          <stringProp name="TestPlan.comments"> D:\ordercode.dat  /home/baseuser/jmeter-3.2-dubbo/extras/ordercode.dat</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">utf-8</stringProp>
          <stringProp name="filename">/home/baseuser/jmeter-3.2-dubbo/extras/ordercode.dat</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">ordercode</stringProp>
        </CSVDataSet>
        <hashTree/>
        <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="云打印—250(10)" enabled="true">
          <stringProp name="TestPlan.comments">{&quot;orderCodes&quot;:[&quot;ZT1803074449139970&quot;,&quot;ZT1803084473701341&quot;]}  {&quot;orderCodes&quot;:[&quot;${order}&quot;,&quot;${order}&quot;,&quot;${order}&quot;,&quot;${order}&quot;,&quot;${order}&quot;]}</stringProp>
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="URL" elementType="Argument">
                <stringProp name="Argument.name">URL</stringProp>
                <stringProp name="Argument.value">zookeeper://10.9.15.32:2181?backup=10.9.15.33:2181,10.9.15.34:2181</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="接口名(必填)" elementType="Argument">
                <stringProp name="Argument.name">接口名(必填)</stringProp>
                <stringProp name="Argument.value">com.zto.order.PreOrderSearchService</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="appid" elementType="Argument">
                <stringProp name="Argument.name">appid</stringProp>
                <stringProp name="Argument.value">zzt-service-fat</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="appkey" elementType="Argument">
                <stringProp name="Argument.name">appkey</stringProp>
                <stringProp name="Argument.value">63dcba400f99f463199cefac0fdc5ce7b81cdd89</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="方法名(必填)" elementType="Argument">
                <stringProp name="Argument.name">方法名(必填)</stringProp>
                <stringProp name="Argument.value">searchByOrderCodes</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="方法参数类型数组(必填)" elementType="Argument">
                <stringProp name="Argument.name">方法参数类型数组(必填)</stringProp>
                <stringProp name="Argument.value">[&apos;com.zto.order.bean.request.SearchByOrderCodesReq&apos;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数1" elementType="Argument">
                <stringProp name="Argument.name">请求参数1</stringProp>
                <stringProp name="Argument.value"> {&quot;orderCodes&quot;:[&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数2" elementType="Argument">
                <stringProp name="Argument.name">请求参数2</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数3" elementType="Argument">
                <stringProp name="Argument.name">请求参数3</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数4" elementType="Argument">
                <stringProp name="Argument.name">请求参数4</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数5" elementType="Argument">
                <stringProp name="Argument.name">请求参数5</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数6" elementType="Argument">
                <stringProp name="Argument.name">请求参数6</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数7" elementType="Argument">
                <stringProp name="Argument.name">请求参数7</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数8" elementType="Argument">
                <stringProp name="Argument.name">请求参数8</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数9" elementType="Argument">
                <stringProp name="Argument.name">请求参数9</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数10" elementType="Argument">
                <stringProp name="Argument.name">请求参数10</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">com.zto.jmeter.dubbo.JMeterOrderServiceTest</stringProp>
        </JavaSampler>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String data = SampleResult.getResponseDataAsString();
if (data.indexOf(&quot;\&quot;status\&quot;:true&quot;) != -1) { //对返回值就行判断
    SampleResult.setSuccessful(true); 
}
else {
    SampleResult.setSuccessful(false); 
     log.info(&quot;请求数据&quot;+SampleResult.getSamplerData());
    log.info(&quot;返回数据&quot;+data);
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>false</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>false</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>false</assertions>
                <subresults>false</subresults>
                <responseData>true</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
              </value>
            </objProp>
            <stringProp name="filename">F:\Projects\XXX接口性能压测Test201804120546.jtl</stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="线程组_300" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">300</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1523438737000</longProp>
        <longProp name="ThreadGroup.end_time">1523438737000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">600</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
          <stringProp name="TestPlan.comments"> D:\ordercode.dat  /home/baseuser/jmeter-3.2-dubbo/extras/ordercode.dat</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">utf-8</stringProp>
          <stringProp name="filename">/home/baseuser/jmeter-3.2-dubbo/extras/ordercode.dat</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">ordercode</stringProp>
        </CSVDataSet>
        <hashTree/>
        <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="云打印—300(10)" enabled="true">
          <stringProp name="TestPlan.comments">{&quot;orderCodes&quot;:[&quot;ZT1803074449139970&quot;,&quot;ZT1803084473701341&quot;]}  {&quot;orderCodes&quot;:[&quot;${order}&quot;,&quot;${order}&quot;,&quot;${order}&quot;,&quot;${order}&quot;,&quot;${order}&quot;]}</stringProp>
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="URL" elementType="Argument">
                <stringProp name="Argument.name">URL</stringProp>
                <stringProp name="Argument.value">zookeeper://10.9.15.32:2181?backup=10.9.15.33:2181,10.9.15.34:2181</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="接口名(必填)" elementType="Argument">
                <stringProp name="Argument.name">接口名(必填)</stringProp>
                <stringProp name="Argument.value">com.zto.order.PreOrderSearchService</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="appid" elementType="Argument">
                <stringProp name="Argument.name">appid</stringProp>
                <stringProp name="Argument.value">zzt-service-fat</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="appkey" elementType="Argument">
                <stringProp name="Argument.name">appkey</stringProp>
                <stringProp name="Argument.value">63dcba400f99f463199cefac0fdc5ce7b81cdd89</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="方法名(必填)" elementType="Argument">
                <stringProp name="Argument.name">方法名(必填)</stringProp>
                <stringProp name="Argument.value">searchByOrderCodes</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="方法参数类型数组(必填)" elementType="Argument">
                <stringProp name="Argument.name">方法参数类型数组(必填)</stringProp>
                <stringProp name="Argument.value">[&apos;com.zto.order.bean.request.SearchByOrderCodesReq&apos;]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数1" elementType="Argument">
                <stringProp name="Argument.name">请求参数1</stringProp>
                <stringProp name="Argument.value"> {&quot;orderCodes&quot;:[&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;,&quot;${__CSVRead(${pathwin},${__Random(0,10000,)})}&quot;]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数2" elementType="Argument">
                <stringProp name="Argument.name">请求参数2</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数3" elementType="Argument">
                <stringProp name="Argument.name">请求参数3</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数4" elementType="Argument">
                <stringProp name="Argument.name">请求参数4</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数5" elementType="Argument">
                <stringProp name="Argument.name">请求参数5</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数6" elementType="Argument">
                <stringProp name="Argument.name">请求参数6</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数7" elementType="Argument">
                <stringProp name="Argument.name">请求参数7</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数8" elementType="Argument">
                <stringProp name="Argument.name">请求参数8</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数9" elementType="Argument">
                <stringProp name="Argument.name">请求参数9</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="请求参数10" elementType="Argument">
                <stringProp name="Argument.name">请求参数10</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">com.zto.jmeter.dubbo.JMeterOrderServiceTest</stringProp>
        </JavaSampler>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String data = SampleResult.getResponseDataAsString();
if (data.indexOf(&quot;\&quot;status\&quot;:true&quot;) != -1) { //对返回值就行判断
    SampleResult.setSuccessful(true); 
}
else {
    SampleResult.setSuccessful(false); 
     log.info(&quot;请求数据&quot;+SampleResult.getSamplerData());
    log.info(&quot;返回数据&quot;+data);
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>false</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>false</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>false</assertions>
                <subresults>false</subresults>
                <responseData>true</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
              </value>
            </objProp>
            <stringProp name="filename">F:\Projects\XXX接口性能压测Test201804120546.jtl</stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="工作台" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
